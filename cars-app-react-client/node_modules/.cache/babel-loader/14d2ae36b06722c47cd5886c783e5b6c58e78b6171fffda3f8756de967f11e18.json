{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Damian\\\\IdeaProjects\\\\react-cars-app\\\\src\\\\Car.js\",\n  _s = $RefreshSig$();\nimport async from \"async\";\nimport { SERVER_URL } from \"./constant\";\nimport { useEffect, useInsertionEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Car() {\n  _s();\n  const [cars, setCars] = useState();\n  const getCars = async () => {\n    const response = await fetch(SERVER_URL + '/car').then(response => response.json());\n    setCars(response);\n  };\n  useEffect(() => {\n    getCars();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Brand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), cars && cars.map(car => {\n      /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: car.brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: car.model\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: car.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, car.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(Car, \"tDqpOGvOMvbf0FRtDNMMEWicErA=\");\n_c = Car;\nexport default Car;\nvar _c;\n$RefreshReg$(_c, \"Car\");","map":{"version":3,"names":["async","SERVER_URL","useEffect","useInsertionEffect","useState","jsxDEV","_jsxDEV","Car","_s","cars","setCars","getCars","response","fetch","then","json","children","fileName","_jsxFileName","lineNumber","columnNumber","map","car","brand","model","year","id","_c","$RefreshReg$"],"sources":["C:/Users/Damian/IdeaProjects/react-cars-app/src/Car.js"],"sourcesContent":["import async from \"async\";\r\nimport {SERVER_URL} from \"./constant\";\r\nimport {useEffect, useInsertionEffect, useState} from \"react\";\r\n\r\nfunction Car() {\r\n\r\n    const [cars, setCars] = useState()\r\n\r\n    const getCars = async()=> {\r\n\r\n        const response = await fetch(\r\n            SERVER_URL + '/car'\r\n        ).then((response) => response.json());\r\n\r\n      setCars(response);\r\n    }\r\n\r\n    useEffect(() => {getCars()}, []);\r\n    return (\r\n        <table>\r\n            <tr>\r\n                <th>Brand</th>\r\n                <th>Model</th>\r\n                <th>Year</th>\r\n            </tr>\r\n            {cars && cars.map((car) => {\r\n            <tr key={car.id}>\r\n                <th>{car.brand}</th>\r\n                <th>{car.model}</th>\r\n                <th>{car.year}</th>\r\n            </tr>\r\n            })}\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Car;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,UAAU,QAAO,YAAY;AACrC,SAAQC,SAAS,EAAEC,kBAAkB,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAElC,MAAMO,OAAO,GAAG,MAAAA,CAAA,KAAU;IAEtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxBZ,UAAU,GAAG,MACjB,CAAC,CAACa,IAAI,CAAEF,QAAQ,IAAKA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IAEvCL,OAAO,CAACE,QAAQ,CAAC;EACnB,CAAC;EAEDV,SAAS,CAAC,MAAM;IAACS,OAAO,CAAC,CAAC;EAAA,CAAC,EAAE,EAAE,CAAC;EAChC,oBACIL,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,gBACIV,OAAA;QAAAU,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdd,OAAA;QAAAU,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdd,OAAA;QAAAU,QAAA,EAAI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,EACJX,IAAI,IAAIA,IAAI,CAACY,GAAG,CAAEC,GAAG,IAAK;MAC3B,aAAAhB,OAAA;QAAAU,QAAA,gBACIV,OAAA;UAAAU,QAAA,EAAKM,GAAG,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBd,OAAA;UAAAU,QAAA,EAAKM,GAAG,CAACE;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBd,OAAA;UAAAU,QAAA,EAAKM,GAAG,CAACG;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAHdE,GAAG,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CAAC;IACL,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB;AAACZ,EAAA,CA9BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}